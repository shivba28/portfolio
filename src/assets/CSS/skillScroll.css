@import url('https://fonts.googleapis.com/css2?family=Geist:wght@100..900&display=swap');
:root {
  color-scheme: dark;
  --font-size-min: 14;
  --font-size-max: 20;
  --font-ratio-min: 1.1;
  --font-ratio-max: 1.33;
  --font-width-min: 375;
  --font-width-max: 1500;
  --start: 1000;
  --hue: 1000;
  --end: 0;
  --chroma: 0;
  --lightness: 75%;
  --base-chroma: 0.3;
}

chroma-off animation {
  --chroma: 0.3;
}
chroma-on animation {
  --chroma: 0.3;
}
change animation {
  --hue: 977.333;
}

:where(.fluid) {
  --fluid-min: calc(
    var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0))
  );
  --fluid-max: calc(
    var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0))
  );
  --fluid-preferred: calc(
    (var(--fluid-max) - var(--fluid-min)) /
      (var(--font-width-max) - var(--font-width-min))
  );
  --fluid-type: clamp(
    (var(--fluid-min) / 16) * 1rem,
    ((var(--fluid-min) / 16) * 1rem) -
      (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) +
      (var(--fluid-preferred) * var(--variable-unit, 100vi)),
    (var(--fluid-max) / 16) * 1rem
  );
  font-size: var(--fluid-type);
}




.skillscroll-container{
  display: grid;
  place-items: center;
  background: light-dark(white, black);
  min-height: 100vh;
  font-family: 'Geist', 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue', Helvetica, Arial, sans-serif, system-ui;
  width: 100%;

  & main{
    width: 100%;


  & .fluid{
    --font-level: 6;
    display: flex;
    line-height: 1.25;
    width: 100%;
    padding-left: 5rem;
    overflow-y: scroll;
    justify-content: center;
    height: 100vh;
    scrollbar-width: none;
    /* scroll-snap-type: y proximity; */

    &::-webkit-scrollbar {
      display: none; /* Hides the scrollbar in Webkit browsers (Chrome, Safari) */
    }

  h2 {
    position: sticky;
    top: calc(50% - 0.5lh);
    font-size: inherit;
    margin: 0;
    display: inline-block;
    height: -webkit-fit-content;
    height: -moz-fit-content;
    height: fit-content;
    font-weight: 600;
    background: linear-gradient(canvasText 50%, color-mix(in oklch, canvas, canvasText 25%));
    -webkit-background-clip: text;
    background-clip: text;
    color: #0000;
    margin-right: 50px;
  }

  & ul {
    view-timeline: --list;
    --step: calc((var(--end) - var(--start)) /(var(--count) - 1));
    font-weight: 600;
    padding-inline: 0;
    margin: 0;
    list-style-type: none;
    /* top: calc(50% - 0.5lh);
    position: relative; */

      & li:first-of-type {
        --start-opacity: 1;
      }
    
      & li {
        -webkit-animation-fill-mode: both;
        animation-fill-mode: both;
        -webkit-animation-timing-function: linear;
        animation-timing-function: linear;
        animation-range: cover calc(50% - 1lh) calc(50% + 1lh);
        animation-timeline: view();
        animation-name: brighten;
        /* scroll-snap-align: center; */
      }

      & li:not(:last-of-type) {
        color: oklch(var(--lightness) var(--base-chroma) calc(var(--start) + (var(--step) * var(--i))));
      }

      &li:last-of-type {
        background: linear-gradient(
          canvasText 50%,
          color-mix(in oklch, canvas, canvasText 25%)
        );
        background-clip: text;
        color: #0000;
      }
    }
  }
  section:last-of-type {
    min-height: 100vh;
    display: flex;
    place-items: center;
    width: 100%;
    justify-content: center;
  
    h2 {
      --font-level: 6;
    }
  }
}
footer {
  padding-block: 2rem;
  opacity: 0.5;
}
}

@keyframes brighten {
  0% {
    opacity: var(--start-opacity, 0.2);
  }
  50% {
    opacity: 1;
    filter: brightness(var(--brightness, 1.2));
  }
  100% {
    opacity: var(--end-opacity, 0.2);
  }
}

.skillscroll-container::before {
  --size: 45px;
    --line: color-mix(in hsl, canvasText, transparent 70%);
    content: '';
    height: 100vh;
    width: 100vw;
    position: absolute;
    background: linear-gradient(90deg, var(--line) 1px, transparent 1px var(--size)) 50% 50% / var(--size) var(--size), linear-gradient(var(--line) 1px, transparent 1px var(--size)) 50% 50% / var(--size) var(--size);
    -webkit-mask: linear-gradient(-20deg, transparent 50%, white);
    mask: linear-gradient(-20deg, transparent 50%, white);
    top: 0;
    transform-style: flat;
    pointer-events: none;
}